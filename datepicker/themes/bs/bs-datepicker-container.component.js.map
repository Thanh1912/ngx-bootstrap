{"version":3,"file":"bs-datepicker-container.component.js","sourceRoot":"","sources":["../../../../src/datepicker/themes/bs/bs-datepicker-container.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAqB,MAAM,eAAe,CAAC;AAC3E,OAAO,EAAE,6BAA6B,EAAE,MAAM,oCAAoC,CAAC;AAEnF,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAEhE,OAAO,EAAE,mBAAmB,EAAE,MAAM,qCAAqC,CAAC;AAC1E,OAAO,EAAE,mBAAmB,EAAE,MAAM,qCAAqC,CAAC;AAC1E,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AActE;IAAoD,kDAA6B;IAQ/E,wCACU,OAA2B,EAC3B,MAAyB,EACzB,QAA6B,EACrC,QAA6B;QAJ/B,YAME,iBAAO,SAER;QAPS,aAAO,GAAP,OAAO,CAAoB;QAC3B,YAAM,GAAN,MAAM,CAAmB;QACzB,cAAQ,GAAR,QAAQ,CAAqB;QANvC,iBAAW,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAE3D,WAAK,GAAmB,EAAE,CAAC;QAQzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;IAC3B,CAAC;IAdD,sBAAI,iDAAK;aAAT,UAAU,KAAW;YACnB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC;;;OAAA;IAcD,iDAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,QAAQ;aACV,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aAEjB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;aAExB,WAAW,CAAC,IAAI,CAAC;aAEjB,gBAAgB,CAAC,IAAI,CAAC;aACtB,6BAA6B,EAAE,CAAC;QAEnC,+BAA+B;QAC/B,0BAA0B;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,CAAC,MAAM;aACR,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,YAAY,EAAlB,CAAkB,CAAC;aACnC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAClD,CAAC;IACJ,CAAC;IAED,yDAAgB,GAAhB,UAAiB,GAAiB;QAChC,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,oDAAW,GAAX;QACE,GAAG,CAAC,CAAc,UAAU,EAAV,KAAA,IAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU;YAAvB,IAAM,GAAG,SAAA;YACZ,GAAG,CAAC,WAAW,EAAE,CAAC;SACnB;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAnDU,8BAA8B;QAX1C,SAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,SAAS,EAAE,CAAC,iBAAiB,EAAE,mBAAmB,CAAC;YACnD,WAAW,EAAE,2BAA2B;YACxC,IAAI,EAAE;gBACJ,SAAS,EAAE,0BAA0B;gBACrC,KAAK,EAAE,qCAAqC;gBAC5C,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,UAAU;aACzB;SACF,CAAC;yCAUmB,kBAAkB;YACnB,iBAAiB;YACf,mBAAmB;YAC3B,mBAAmB;OAZpB,8BAA8B,CAoD1C;IAAD,qCAAC;CAAA,AApDD,CAAoD,6BAA6B,GAoDhF;SApDY,8BAA8B","sourcesContent":["import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { BsDatepickerAbstractComponent } from '../../base/bs-datepicker-container';\r\n\r\nimport { BsDatepickerConfig } from '../../bs-datepicker.config';\r\nimport { DayViewModel } from '../../models/index';\r\nimport { BsDatepickerActions } from '../../reducer/bs-datepicker.actions';\r\nimport { BsDatepickerEffects } from '../../reducer/bs-datepicker.effects';\r\nimport { BsDatepickerStore } from '../../reducer/bs-datepicker.store';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'bs-datepicker-container',\r\n  providers: [BsDatepickerStore, BsDatepickerEffects],\r\n  templateUrl: './bs-datepicker-view.html',\r\n  host: {\r\n    '(click)': '_stopPropagation($event)',\r\n    style: 'position: absolute; display: block;',\r\n    role: 'dialog',\r\n    'aria-label': 'calendar'\r\n  }\r\n})\r\nexport class BsDatepickerContainerComponent extends BsDatepickerAbstractComponent\r\n  implements OnInit, OnDestroy {\r\n  set value(value: Date) {\r\n    this._effects.setValue(value);\r\n  }\r\n  valueChange: EventEmitter<Date> = new EventEmitter<Date>();\r\n\r\n  _subs: Subscription[] = [];\r\n  constructor(\r\n    private _config: BsDatepickerConfig,\r\n    private _store: BsDatepickerStore,\r\n    private _actions: BsDatepickerActions,\r\n    _effects: BsDatepickerEffects\r\n  ) {\r\n    super();\r\n    this._effects = _effects;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.containerClass = this._config.containerClass;\r\n    this._effects\r\n      .init(this._store)\r\n      // intial state options\r\n      .setOptions(this._config)\r\n      // data binding view --> model\r\n      .setBindings(this)\r\n      // set event handlers\r\n      .setEventHandlers(this)\r\n      .registerDatepickerSideEffects();\r\n\r\n    // todo: move it somewhere else\r\n    // on selected date change\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.selectedDate)\r\n        .subscribe(date => this.valueChange.emit(date))\r\n    );\r\n  }\r\n\r\n  daySelectHandler(day: DayViewModel): void {\r\n    if (day.isOtherMonth || day.isDisabled) {\r\n      return;\r\n    }\r\n    this._store.dispatch(this._actions.select(day.date));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this._subs) {\r\n      sub.unsubscribe();\r\n    }\r\n    this._effects.destroy();\r\n  }\r\n}\r\n"]}